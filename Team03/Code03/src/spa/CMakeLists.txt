file(GLOB srcs "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
file(GLOB headers "${CMAKE_CURRENT_SOURCE_DIR}/src/*.h" "${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp")
add_library(spa ${srcs} ${headers} src/common/entity/entity.h src/common/abstraction/abstraction.h src/common/abstraction/follows_abstraction.cpp src/common/abstraction/follows_abstraction.h src/common/abstraction/parent_abstraction.cpp src/common/abstraction/parent_abstraction.h src/common/abstraction/parent_t_abstraction.cpp src/common/abstraction/parent_t_abstraction.h src/common/abstraction/uses_s_abstraction.cpp src/common/abstraction/uses_s_abstraction.h src/common/abstraction/modifies_s_abstraction.cpp src/common/abstraction/modifies_s_abstraction.h src/common/abstraction/follows_t_abstraction.cpp src/common/abstraction/follows_t_abstraction.h src/common/entity/procedure_entity.cpp src/common/entity/procedure_entity.h src/common/entity/statement_entity.cpp src/common/entity/statement_entity.h src/common/entity/read_entity.cpp src/common/entity/read_entity.h src/common/entity/print_entity.cpp src/common/entity/print_entity.h src/common/entity/assign_entity.cpp src/common/entity/assign_entity.h src/common/entity/call_entity.cpp src/common/entity/call_entity.h src/common/entity/while_entity.cpp src/common/entity/while_entity.h src/common/entity/if_entity.cpp src/common/entity/if_entity.h src/common/entity/variable_entity.cpp src/common/entity/variable_entity.h src/common/entity/constant_entity.cpp src/common/entity/constant_entity.h src/common/reference/statement_reference.cpp src/common/reference/statement_reference.h src/common/reference/reference.h src/common/reference/entity_reference.cpp src/common/reference/entity_reference.h)
# this makes the headers accessible for other projects which uses spa lib
target_include_directories(spa PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src)


