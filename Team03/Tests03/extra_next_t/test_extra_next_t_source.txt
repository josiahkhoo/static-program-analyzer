procedure prod1
{

    a = useOnlyABC;
    a = useOnly123;
    a = DoNotUseOtherVariableName;
    a = ForEasyPatternFindingMatchingTesting;

    print a;
    print b;
    print c;
    read a;
    read b;
    read c;

    VeryLongVariableName12345VeryLongVariableName12345 = 1;
    a = VeryLongVariableName12345;
    a = b;
    a = 3;
    a = b * b;
    a = b / c;
    b = a % c;
    c = b * b * c;
    c = a / b / c;
    c = a % b / c;
    read b;
    c = a * b % c;
    a = a * 1;
    a = b / 2;
    c = b % 3;
    a = 1 * c / 3;
    read prod1;
    b = 2 * 3 % c;
    c = 2 * 3 / 1;
    a = a / 3 * c;
    b = b / 2 % c;
    read a;
    c = c * 1 * 2;
    a = a * b * c / 1 / 2 / 3;
    b = a * 1 / b % 2 * c / 3;
    c = c % 3 * 2 / b % 1 / a;
    a = a * b * c * 1 * 2 * 3 * c * b * a * 1 * 2 * 3 / a / b / c;
    b = a * 2 / b * 3 % 1 % b / 3 * b / 2 / 1 * 1 % a * b / c * 1;
    c = a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a;
    read read;
    call prod4;

    print read;
    a = (1 * c / 3) - (b % 3);
    a = (b * b) - (b % 3);
    read prod7;
    a = c * 1 * 2;
    a = c * 1 * 2;
    a = c * 1 * 2 * b;
    a = b / c;
    print prod3;
    b = a % c;
    c = b * c * 1 * 2 * c;
    c = a / c * 1 * 2 / c;
    c = a % b / c;
    c = a * c * 1 * 2 % c;
    a = a * 1;

    a = (1 * c / 3) - (b % a / b - c);
    a = (b * b) - (b % a / b - c);
    a = c * 1 * a / b - c;
    a = c * 1 * a / b - c;
    a = c * 1 * a / b - c * b;
    read prod2;
    a = b / a / b - c;
    b = a % a / b - c;
    print prod6;
    c = b * c * 1 * 2 * a / b - c;
    c = a / c * 1 * 2 / a / b - c;
    c = a % b / a / b - c;
    c = a * c * 1 * 2 % a / b - c;
    a = a * a / b - c;
    read prod6;
    a = b / c * 1 * a / b - c;
    c = b % c * 1 * a / b - c;
    a = 1 * c * 1 * 2 / a / b - c;
    b = 2 * 3 % a / b - c;
    c = 2 * c * 1 * 2 / a / b - c;
    a = c * 1 * 2 / 3 * a / b - c;
    print prod7;
    b = c * 1 * 2 / 2 % a / b - c;
    c = c * 1 * 2 * 1 * a / b - c;

    a = (1 / 3) - (b % a / b - c);
    a = (b) - (b % a / b - c);
    a = c * 1 / b - c;
    read prod3;
    a = c * 1 / b - c;
    a = c * 1 * a / b - c * b;
    a = b / a - c;
    b = a % a - c;
    c = b * c * 2 * a / b - c;
    c = a / c * 1 * 2 / a / b - c;
    c = a % b / b - c;
    c = a * 1 * 2 % a / b - c;
    a = a * b - c;
    a = b / c * 1 * a / b - c;
    read prod5;
    c = b % c * 1 * a / b - c;
    a = 1 * c * 2 / a / b - c;
    b = 2 * 3 / b - c;
    c = 2 * c * 2 / a / b - c;
    a = c * 1 * 2 / 3 * a / b - c;
    b = c * 1 * 2 % a / b - c;
    c = c * 1 * 2 * a / b - c;

    a = a + b;
    b = a + b + c;
    c = a + 2 - 3 + a - b;
    a = a + (a - b + c - a + 3 + 2);
    a = a + (a * a);
    a = a + (a / c);
    a = a + (a * b - c);
    a = a + (a + b / c);
    a = a + (a * b * c / 1 / 2 % 3);
    a = a + (a % b + c * 1 - b / 3);
    a = a + (a * (b * c) - 3 + 2 % (a - b));
    a = a + ((a - b) * c - a / 3);
    a = (a + b);

    a = (a - b + c) + a + b + c;
    a = (a - b + c) - (a / 3);
    a = (a - b + c) * (a / 3);
    read c;
    a = (a - b + c) % b - c;
    a = (a - b + c) - (a / 3) * (a + b / c);
    a = (a - b + c) - (a / 3) - (a * a);
    a = (a - b + c) / (a / 3) / (a + b);
    a = (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b));
    read prod5;
    a = (a - b + c) + a + ((a - b) * c - (a / 3));
    a = (a - b + c) + (a * b * c / 1 / 2 % 3);
    a = (a - b + c) + a + b + c + a / b - c;
    print prod4;
    a = (a - b + c) - (a / 3) + a / b - c;
    a = (a - b + c) * (a / 3) + a / b - c;
    a = (a - b + c) % b - c + a / b - c;
    a = (a - b + c) - (a / 3) * (a + b / c) + a / b - c;
    read prod2;
    a = (a - b + c) - (a / 3) - (a * a) + a / b - c;
    a = (a - b + c) / (a / 3) / (a + b) + a / b - c;
    a = (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b)) + a / b - c;
    a = (a - b + c) + a / b - c + ((a - b) * c - (a / 3)) + a / b - c;
    a = (a - b + c) + (a * b * c / 1 / 2 % 3) + a / b - c;
    call prod2;

    a = (a - b + c) + a + c;
    a = (a - b + c) - (a);
    a = (a - b + c) * (3);
    a = (a - b + c) % b;
    a = (a - b + c) - (a / 3) * (a + b);
    print prod2;
    a = (a - b + c) - (a / 3) - (a);
    a = (a - b + c) / (a) / (a + b);
    a = (a - b + c) + a + (a * (b)-3 + 2 % (a - b));
    a = (a - b + c) + a + ((a - b) - (a / 3));
    a = (a - b + c) + (a * b * c / 2 % 3);
    a = (a - b + c) + a + b + c / b - c;
    print prod5;
    a = (a - b + c) - (a / 3) + b - c;
    a = (a - b + c) * (a / 3) + b - c;
    a = (a - b + c) % b - c + a - c;
    a = (a - b + c) - (a / 3) * (a / c) + a / b - c;
    a = (a - b + c) - (a / 3) - (a * a) / b - c;
    print prod6;
    a = (a - b + c) / (a / 3) / (a + b) + a - c;
    a = (a - b + c) + a + (a * (b * c) - 3 % (a - b)) + a / b - c;
    print prod3;
    a = (a - b + c) + a / b - c + ((a - b) * c - (a / 3)) + a - c;
    a = (a - b + c) + (a * b * c / 1 / 2 % 3) + a - c;

    a = (a / b - c) % VeryLongVariableName12345 + (a - b + c);

    while (a < b)
    {
        while ((b <= a ) && (b > c))
        {
            a = (a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3);
            a = ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3);
        }
        while ((c <= a ) || (b < c))
        {
            a = ((a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3));
            a = (a / b - c) % (a - b + c) + a + ((a - b) * c - (a / 3));
        }
        while (((b <= a ) && (b > c)) || (b <= c))
        {
            while (!(a >= b))
            {
                a = (a / b - c) % (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b));
            }
            while ((!(a <= b)) && (a < b))
            {
                a = (a / b - c) % (a - b + c) + a + b + c;
            }
            while (a >= a + b)
            {
                a = (a / b - c) % VeryLongVariableName12345;
            }
            while (a - b < c)
            {
                a = (a / b - c) % a / VeryLongVariableName12345;
            }
            while (a * c <= b + 1)
            {
                a = (a / b - c) % (a - b + c) - (a / 3);
                a = (a / b - c) % (a - b + c) % b - c;
                a = (a / b - c) % (a - b + c) - (a / 3) * (a + b / c);
                a = (a / b - c) % (a - b + c) - (a / 3) - (a * a);
            }
            while (a / b + c == 3)
            {
                a = (a / b - c) % (a - b + c) / (a / 3) / (a + b);
                if (((b <= a ) && (b > c)) || (b <= c))
                    then
                    {
                        a = (1 * c / 3) - (b % 3);
                        a = (b * b) - (b % 3);
                        a = c * 1 * 2;
                        a = c * 1 * 2;
                        a = c * 1 * 2 * b;
                    }
                else
                {
                    a = b / c;
                    b = a % c;
                    c = b * c * 1 * 2 * c;
                    c = a / c * 1 * 2 / c;
                    call prod5;
                    c = a % b / c;
                }
            }
            while (a - c / b != a - c / b)
            {
                while (a < (a / b - c) % a / VeryLongVariableName12345)
                {
                    a = ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3);
                    if (((c <= a ) || (b < c)) && (a > c))
                        then
                        {
                            a = (1 * c / 3) - (b % a / b - c);
                            a = (b * b) - (b % a / b - c);
                            a = c * 1 * a / b - c;
                            a = c * 1 * a / b - c;
                            a = c * 1 * a / b - c * b;
                            a = b / a / b - c;
                        }
                    else
                    {
                        c = a * c * 1 * 2 % c;
                        a = a * 1;
                    }
                }
                while (a + (a * (b * c) - 3 + 2 % (a - b)) >
                       a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)
                {
                    a = (a / b - c) % (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b));
                }
                while ((a - b + c) + (a * b * c / 1 / 2 % 3) <=
                       ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3))
                {
                    a = (a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3);
                }
                if (!(((((((!(a == c)) || (b < c)) && (a > c)) || (3)) || (1)) && (a < b)) || (b < c)))
                    then
                    {
                        b = a % a / b - c;
                        c = b * c * 1 * 2 * a / b - c;
                        c = a / c * 1 * 2 / a / b - c;
                    }
                else
                {
                    c = a % b / a / b - c;
                    c = a * c * 1 * 2 % a / b - c;
                    print prod8;
                    a = a * a / b - c;
                    a = b / c * 1 * a / b - c;
                    call prod5;
                }
                print print;
                while ((a - b + c) && (b > c))
                {
                    a = ((a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3));
                    while ((a - b + c) || (a / b - c))
                    {
                        while ((((a - b + c) || (b < c)) && (a > c)))
                        {
                            a = (a / b - c) % (a - b + c) + a + ((a - b) * c - (a / 3));
                        }
                    }
                    if ((a < b) && (c > 3))
                        then
                        {
                            c = b % c * 1 * a / b - c;
                            a = 1 * c * 1 * 2 / a / b - c;
                            print prod7;
                            b = 2 * 3 % a / b - c;
                        }
                    else
                    {
                        c = 2 * c * 1 * 2 / a / b - c;
                        a = c * 1 * 2 / 3 * a / b - c;
                        b = c * 1 * 2 / 2 % a / b - c;
                        call prod5;
                    }
                }
            }
        }
        print print;
        while (((c <= a ) || (b < c)) && (a > c))
        {
            VeryLongVariableName12345VeryLongVariableName12345 = 1;
            a = VeryLongVariableName12345;
            a = b;
            a = 3;
            read prod1;
            a = b * b;
        }
        read prod8;
        while (!(((((((!(a == c)) || (b < c)) && (a > c)) || (3)) || (1)) && (a < b)) || (b < c)))
        {
            a = b / c;
            b = a % c;
            c = b * b * c;
            read prod4;
            c = a / b / c;
            c = a % b / c;
            call prod5;
            c = a * b % c;
            a = a * 1;
            a = b / 2;
            c = b % 3;
            a = 1 * c / 3;
            read prod8;
        }
        while ((a < b) && (c > 3))
        {
            c = a % b / c;
        }
    }
    while (((a / b - c) && (2)) || (b <= c))
    {
        a = (a / b - c) % (a - b + c) + a + (a - b + c) + b + c;
        while (
            !(((((((!(a - b + c)) || (b < c)) && (a - b + c)) || (3)) || (a / b - c)) && (a - b + c)) ||
              (a >= b)))
        {
            a = (a / b - c) % VeryLongVariableName12345 + (a - b + c);
            a = (a / b - c) % a / VeryLongVariableName12345 + (a - b + c);
        }
        while ((2 < a - b + c) && (a / b - c > 3))
        {
            a = (a / b - c) % (a - b + c) + a + (a - b + c) + (a * (b * c) - 3 + 2 % (a - b));
            a = (a / b - c) % (a - b + c) + a + (a - b + c) + ((a - b) * c - (a / 3));
            a = (a / b - c) % (a - b + c) + (a + (a - b + c) * b * c / 1 / 2 % 3);
            a = ((a / b - c) % (a - b + c) + (a + (a - b + c) * b * c / 1 / 2 % 3));
        }
        while (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % (a + b) < b)
        {
            a = ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3) + (a - b + c);
            a = (a / b - c) % VeryLongVariableName12345;
        }
        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3);
        call prod5;
        while ((a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a) && ((a + b)))
        {
            a = (a / b - c) % (a - b + c) + a + ((a - b) * c - (a / 3)) + (a - b + c);
            a = (a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3) + (a - b + c);
        }
        a = (a / b - c) % a / VeryLongVariableName12345;
        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3);
        while (((a + b)) || (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a))
        {
            a = (a / b - c) % a / VeryLongVariableName12345;
            a = (a / b - c) % (a - b + c) + a + (a - b + c) + b + c;
            while (
                (((a + b)) && (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a) || (b <= c)))
            {
                a = (a / b - c) % (a - b + c) - (a / 3) - (a * a) + (a - b + c);
            }
            while ((((c <= a ) || (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) && (a > c)))
            {
                a = (a / b - c) % (a - b + c) - (a / 3) * (a + b / c) + (a - b + c);
            }
            while (!(((((((!(a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) || (b < c)) &&
                         (a >= b)) ||
                        (3)) ||
                       (1)) &&
                      (a > b)) ||
                     (a >= b)))
            {
                a = ((a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3)) + (a - b + c);
            }
            while ((a < (a + b)) && (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a > 3))
            {
                a = (a / b - c) % (a - b + c) / (a / 3) / (a + b) + (a - b + c);
            }
            while (!((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a))
            {
                a = (a / b - c) % (a - b + c) % b - c + (a - b + c);
                if (a < b)
                    then
                    {
                        a = (a - b + c) + a + (a * (b * c) - 3 % (a - b)) + a / b - c;
                        a = (a - b + c) + a / b - c + ((a - b) * c - (a / 3)) + a - c;
                        a = (a - b + c) + (a * b * c / 1 / 2 % 3) + a - c;
                        while (a * a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a <=
                               (a + b) + 1)
                        {
                            a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) - (a * a);
                            a = (a / b - c) % (a - b + c) / (a + (a - b + c) / 3) / (a + b);
                            while (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a / b +
                                       c ==
                                   (a + b))
                            {
                                a = (a / b - c) % (a - b + c) % b + (a - b + c) - c;
                                call prod5;
                                a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) * (a + b / c);
                                while (a - c / (a + b) != a - c / a % b % 1 % 2 % 3 / 1 % 2 % 3 %
                                                                  a % b % c % 1 % 1 % 3 % a)
                                {
                                    a = (a / b - c) % (a - b + c) + a +
                                        (a * (b * c) - 3 + 2 % (a - b) + (a - b + c));
                                }
                            }
                        }
                    }
                else
                {
                    a = (a - b + c) - (a / 3) + b - c;
                    a = (a - b + c) * (a / 3) + b - c;
                    a = (a - b + c) % b - c + a - c;
                    a = (a - b + c) - (a / 3) * (a / c) + a / b - c;
                    a = (a - b + c) - (a / 3) - (a * a) / b - c;
                    a = (a - b + c) / (a / 3) / (a + b) + a - c;
                    while (a - a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a < (a + b))
                    {
                        a = ((a / b - c) % (a - b + c)) + (a + (a - b + c) * b * c / 1 / 2 % 3);
                    }
                }
            }
        }
    }
    while ((!(a <= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) && (a < b))
    {
        a = (a / b - c) % (a - b + c) + a + b + c + (a - b + c);
        call prod5;
    }
    while ((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a + b)
    {
        a = (a / b - c) % (a - b + c) - (a / 3) + (a - b + c);
    }
    while (a - a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a < (a + b))
    {
        a = ((a / b - c) % (a - b + c)) + (a + (a - b + c) * b * c / 1 / 2 % 3);
    }
    while (a * a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a <= (a + b) + 1)
    {
        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) - (a * a);
        a = (a / b - c) % (a - b + c) / (a + (a - b + c) / 3) / (a + b);
        while (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a / b + c == (a + b))
        {
            a = (a / b - c) % (a - b + c) % b + (a - b + c) - c;
            a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) * (a + b / c);
            while (a - c / (a + b) !=
                   a - c / a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)
            {
                a = (a / b - c) % (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b) + (a - b + c));
                if ((b <= a ) && (b > c))
                    then
                    {
                        a = a / 3 * c;
                        b = b / 2 % c;
                        c = c * 1 * 2;
                    }
                else
                {
                    a = a * b * c / 1 / 2 / 3;
                    b = a * 1 / b % 2 * c / 3;
                    c = c % 3 * 2 / b % 1 / a;
                    call prod5;
                }
            }
            a = (1 / 3) - (b % a / b - c);
            call prod3;
            a = (b) - (b % a / b - c);
            if (a < b)
                then
                {
                    b = 2 * 3 % c;
                    c = 2 * 3 / 1;
                    if ((c <= a ) || (b < c))
                        then
                        {
                            a = a * b * c * 1 * 2 * 3 * c * b * a * 1 * 2 * 3 / a / b / c;
                            b = a * 2 / b * 3 % 1 % b / 3 * b / 2 / 1 * 1 % a * b / c * 1;
                            c = a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a;
                        }
                    else
                    {
                        c = c * 1 * 2 * 1 * a / b - c;
                    }
                }
            else
            {
                a = a / 3 * c;
                b = b / 2 % c;
                c = c * 1 * 2;
            }
            if (!(a >= b))
                then
                {
                    while ((!(a <= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) && (a < b))
                    {
                        a = (a / b - c) % (a - b + c) + a + b + c + (a - b + c);
                    }
                    while ((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a + b)
                    {
                        a = (a / b - c) % (a - b + c) - (a / 3) + (a - b + c);
                        call prod5;
                    }
                    a = (a - b + c) / (a / 3) / (a + b);
                    a = (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b));
                }
            else
            {
                a = 1 * c * 2 / a / b - c;
                b = 2 * 3 / b - c;
            }
        }
    }

    if (a < b)
        then
        {
            a = (a - b + c) + a + (a * (b * c) - 3 % (a - b)) + a / b - c;
            a = (a - b + c) + a / b - c + ((a - b) * c - (a / 3)) + a - c;
            a = (a - b + c) + (a * b * c / 1 / 2 % 3) + a - c;
            while (a * a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a <= (a + b) + 1)
            {
                a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) - (a * a);
                a = (a / b - c) % (a - b + c) / (a + (a - b + c) / 3) / (a + b);
                while (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a / b + c == (a + b))
                {
                    a = (a / b - c) % (a - b + c) % b + (a - b + c) - c;
                    a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) * (a + b / c);
                    while (a - c / (a + b) !=
                           a - c / a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)
                    {
                        a = (a / b - c) % (a - b + c) + a +
                            (a * (b * c) - 3 + 2 % (a - b) + (a - b + c));
                    }
                }
            }
        }
    else
    {
        a = (a - b + c) - (a / 3) + b - c;
        a = (a - b + c) * (a / 3) + b - c;
        a = (a - b + c) % b - c + a - c;
        a = (a - b + c) - (a / 3) * (a / c) + a / b - c;
        a = (a - b + c) - (a / 3) - (a * a) / b - c;
        a = (a - b + c) / (a / 3) / (a + b) + a - c;
        call prod5;
        while (a - a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a < (a + b))
        {
            a = ((a / b - c) % (a - b + c)) + (a + (a - b + c) * b * c / 1 / 2 % 3);
        }
    }
    if ((b <= a ) && (b > c))
        then
        {
            a = (a - b + c) + a + ((a - b) - (a / 3));
            a = (a - b + c) + (a * b * c / 2 % 3);
            a = (a - b + c) + a + b + c / b - c;
        }
    else
    {
        a = (a - b + c) + a + (a * (b)-3 + 2 % (a - b));
    }
    if ((c <= a ) || (b < c))
        then { a = (a - b + c) / (a) / (a + b); }
    else
    {
        a = (a - b + c) - (a / 3) * (a + b);
        a = (a - b + c) - (a / 3) - (a);
        while ((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a + b)
        {
            a = (a / b - c) % (a - b + c) - (a / 3) + (a - b + c);
        }
    }
    read prod4;
    if (((b <= a ) && (b > c)) || (b <= c))
        then
        {
            while ((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a + b)
            {
                a = (a / b - c) % (a - b + c) - (a / 3) + (a - b + c);
            }
            print prod4;
            a = (a - b + c) * (3);
            a = (a - b + c) % b;
        }
    else
    {
        a = (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b)) + a / b - c;
        a = (a - b + c) + a / b - c + ((a - b) * c - (a / 3)) + a / b - c;
        a = (a - b + c) + (a * b * c / 1 / 2 % 3) + a / b - c;
    }
    read prod7;
    if (((c <= a ) || (b < c)) && (a > c))
        then
        {
            a = (a - b + c) + a + c;
            a = (a - b + c) - (a);
            print read;
        }
    else
    {
        a = (a - b + c) - (a / 3) * (a + b / c) + a / b - c;
        a = (a - b + c) - (a / 3) - (a * a) + a / b - c;
        a = (a - b + c) / (a / 3) / (a + b) + a / b - c;
    }
    print prod1;
    if (!(((((((!(a == c)) || (b < c)) && (a > c)) || (3)) || (1)) && (a < b)) || (b < c)))
        then { a = (a - b + c) - (a / 3) + a / b - c; }
    else
    {
        a = (a - b + c) - (a / 3) + a / b - c;
        a = (a - b + c) * (a / 3) + a / b - c;
        while ((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a + b)
        {
            a = (a / b - c) % (a - b + c) - (a / 3) + (a - b + c);
        }
    }
    if ((a < b) && (c > 3))
        then
        {
            a = (a - b + c) + a + b + c + a / b - c;
            print prod7;
            a = (a - b + c) % b - c + a / b - c;
        }
    else
    {
        a = (a - b + c) + a + ((a - b) * c - (a / 3));
        a = (a - b + c) + (a * b * c / 1 / 2 % 3);
    }
    if (!(a >= b))
        then
        {
            call prod4;
            while ((!(a <= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) && (a < b))
            {
                a = (a / b - c) % (a - b + c) + a + b + c + (a - b + c);
                print prod2;
            }
            while ((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a + b)
            {
                a = (a / b - c) % (a - b + c) - (a / 3) + (a - b + c);
            }
            call prod5;
            a = (a - b + c) / (a / 3) / (a + b);
            a = (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b));
        }
    else
    {
        call prod5;
        a = 1 * c * 2 / a / b - c;
        b = 2 * 3 / b - c;
    }
    read prod6;
    if (a >= a + b)
        then
        {
            if ((!(a <= b)) && (a < b))
                then
                {
                    a = c * 1 * 2 / 3 * a / b - c;
                    b = c * 1 * 2 % a / b - c;
                }
            else
            {
                c = b % c * 1 * a / b - c;
                c = 2 * c * 2 / a / b - c;
                c = c * 1 * 2 * a / b - c;
            }
            a = a + (a - b + c - a + 3 + 2);
            a = a + (a * a);
        }
    else
    {
        a = a + (a / c);
        a = a + (a * b - c);
        a = a + (a + b / c);
        if (a - b < c)
            then { a = a + (a * (b * c) - 3 + 2 % (a - b)); }
        else
        {
            a = (a - b + c) * (a / 3);
            a = (a - b + c) % b - c;
        }
    }
    if (a * c <= b + 1)
        then
        {
            a = (a - b + c) - (a / 3) * (a + b / c);
            a = (a - b + c) - (a / 3) - (a * a);
        }
    else
    {
        a = (a - b + c) + a + b + c;
        a = (a - b + c) - (a / 3);
    }
    if (a / b + c == 3)
        then
        {
            a = a + ((a - b) * c - a / 3);
            a = (a + b);
        }
    else
    {
        a = a + (a * b * c / 1 / 2 % 3);
        a = a + (a % b + c * 1 - b / 3);
    }
    if (a - c / b != a - c / b)
        then
        {
            b = a + b + c;
            c = a + 2 - 3 + a - b;
        }
    else
    {
        a = a * b - c;
        a = b / c * 1 * a / b - c;
    }
    if (a < (a / b - c) % a / VeryLongVariableName12345)
        then { a = a + b; }
    else
    {
        a = c * 1 / b - c;
    }
    if (a + (a * (b * c) - 3 + 2 % (a - b)) >
        a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)
        then { a = c * 1 / b - c; }
    else
    {
        c = a / c * 1 * 2 / a / b - c;
    }
    if ((a - b + c) + (a * b * c / 1 / 2 % 3) <=
        ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3))
        then
        {
            a = c * 1 * a / b - c * b;
            a = b / a - c;
            b = a % a - c;
        }
    else
    {
        c = b * c * 2 * a / b - c;
    }
    if ((a - b + c) && (b > c))
        then { c = a % b / b - c; }
    else
    {
        c = a * 1 * 2 % a / b - c;
    }
    if ((a - b + c) || (a / b - c))
        then { a = (a / b - c) % (a - b + c) + a + b + c; }
    else
    {
        a = (a / b - c) % (a - b + c) / (a / 3) / (a + b);
    }
    if (((a / b - c) && (2)) || (b <= c))
        then { a = (a / b - c) % (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b)); }
    else
    {
        a = (a / b - c) % (a - b + c) % b + (a - b + c) - c;
    }
    if ((((a - b + c) || (b < c)) && (a > c)))
        then { a = ((a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3)); }
    else
    {
        a = ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3);
    }
    if (!(((((((!(a - b + c)) || (b < c)) && (a - b + c)) || (3)) || (a / b - c)) && (a - b + c)) ||
          (a >= b)))
        then { a = (a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3); }
    else
    {
        a = (a / b - c) % (a - b + c) + a + ((a - b) * c - (a / 3));
    }
    if ((2 < a - b + c) && (a / b - c > 3))
        then { a = (a / b - c) % (a - b + c) - (a / 3) - (a * a); }
    else
    {
        a = (a / b - c) % (a - b + c) - (a / 3) * (a + b / c);
    }
    if (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % (a + b) < b)
        then { a = (a / b - c) % (a - b + c) % b - c; }
    else
    {
        a = (a / b - c) % (a - b + c) - (a / 3);
    }
    if ((a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a) && (a + b))
        then { a = (a / b - c) % a / VeryLongVariableName12345; }
    else
    {
        a = (a / b - c) % VeryLongVariableName12345;
    }
    if (((a + b)) || (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a))
        then { a = ((a / b - c) % (a - b + c)) + (a + (a - b + c) * b * c / 1 / 2 % 3); }
    else
    {
        a = ((a / b - c) % (a - b + c) + (a + (a - b + c) * b * c / 1 / 2 % 3));
    }
    if ((((a + b)) && (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) || (b <= c))
        then
        {
            a = (a / b - c) % (a - b + c) + (a + (a - b + c) * b * c / 1 / 2 % 3);
            read prod3;
        }
    else
    {
        a = (a / b - c) % (a - b + c) + a + (a - b + c) + ((a - b) * c - (a / 3));
    }
    read read;
    if (((c <= a ) || (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) && (a > c))
        then { a = (a / b - c) % (a - b + c) + a + (a - b + c) + (a * (b * c) - 3 + 2 % (a - b)); }
    else
    {
        a = (a / b - c) % (a - b + c) / (a + (a - b + c) / 3) / (a + b);
        print prod1;
        print prod8;
    }
    if (!(((((((!(a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) || (b < c)) && (a > c)) ||
             (3)) ||
            (1)) &&
           (a > b)) ||
          (a >= b)))
        then { a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) - (a * a); }
    else
    {
        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) * (a + b / c);
    }
    if ((a < (a + b)) && (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a > 3))
        then { a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3); }
    else
    {
        a = (a / b - c) % (a - b + c) + a + (a - b + c) + b + c;
    }
    if (!((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a))
        then { a = (a / b - c) % a / VeryLongVariableName12345; }
    else
    {
        a = (a / b - c) % VeryLongVariableName12345;
    }
    if ((!(a <= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) && (a < b))
        then { a = ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3) + (a - b + c); }
    else
    {
        a = ((a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3)) + (a - b + c);
    }
    if ((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a + b)
        then { a = (a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3) + (a - b + c); }
    else
    {
        a = (a / b - c) % (a - b + c) + a + ((a - b) * c - (a / 3)) + (a - b + c);
    }
    if (a - a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a < (a + b))
        then { a = (a / b - c) % (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b) + (a - b + c)); }
    else
    {
        a = (a / b - c) % (a - b + c) / (a / 3) / (a + b) + (a - b + c);
    }
    if (a * a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a <= (a + b) + 1)
        then { a = (a / b - c) % (a - b + c) - (a / 3) - (a * a) + (a - b + c); }
    else
    {
        a = (a / b - c) % (a - b + c) - (a / 3) * (a + b / c) + (a - b + c);
    }
    if (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a / b + c == (a + b))
        then { a = (a / b - c) % (a - b + c) % b - c + (a - b + c); }
    else
    {
        a = (a / b - c) % (a - b + c) - (a / 3) + (a - b + c);
        read read;
    }
    if (a - c / (a + b) != a - c / a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)
        then
        {
            a = (a / b - c) % (a - b + c) + a + b + c + (a - b + c);
            if (a < b)
                then
                {
                    a = (a - b + c) + a + (a * (b * c) - 3 % (a - b)) + a / b - c;
                    a = (a - b + c) + a / b - c + ((a - b) * c - (a / 3)) + a - c;
                    a = (a - b + c) + (a * b * c / 1 / 2 % 3) + a - c;
                    while (a * a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a <=
                           (a + b) + 1)
                    {
                        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) - (a * a);
                        a = (a / b - c) % (a - b + c) / (a + (a - b + c) / 3) / (a + b);
                        while (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a / b + c ==
                               (a + b))
                        {
                            a = (a / b - c) % (a - b + c) % b + (a - b + c) - c;
                            a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) * (a + b / c);
                            while (a - c / (a + b) != a - c / a % b % 1 % 2 % 3 / 1 % 2 % 3 % a %
                                                              b % c % 1 % 1 % 3 % a)
                            {
                                a = (a / b - c) % (a - b + c) + a +
                                    (a * (b * c) - 3 + 2 % (a - b) + (a - b + c));
                            }
                        }
                        if (a >= a + b)
                            then
                            {
                                if ((!(a <= b)) && (a < b))
                                    then
                                    {
                                        a = c * 1 * 2 / 3 * a / b - c;
                                        b = c * 1 * 2 % a / b - c;
                                    }
                                else
                                {
                                    c = b % c * 1 * a / b - c;
                                    c = 2 * c * 2 / a / b - c;
                                    c = c * 1 * 2 * a / b - c;
                                }
                                a = a + (a - b + c - a + 3 + 2);
                                a = a + (a * a);
                            }
                        else
                        {
                            a = a + (a / c);
                            a = a + (a * b - c);
                            a = a + (a + b / c);
                            if (a - b < c)
                                then { a = a + (a * (b * c) - 3 + 2 % (a - b)); }
                            else
                            {
                                a = (a - b + c) * (a / 3);
                                a = (a - b + c) % b - c;
                            }
                        }
                    }
                }
            else
            {
                a = (a - b + c) - (a / 3) + b - c;
                a = (a - b + c) * (a / 3) + b - c;
                a = (a - b + c) % b - c + a - c;
                a = (a - b + c) - (a / 3) * (a / c) + a / b - c;
                a = (a - b + c) - (a / 3) - (a * a) / b - c;
                a = (a - b + c) / (a / 3) / (a + b) + a - c;
                while (a - a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a < (a + b))
                {
                    a = ((a / b - c) % (a - b + c)) + (a + (a - b + c) * b * c / 1 / 2 % 3);
                }
            }
        }
    else
    {
        a = (a / b - c) % a / VeryLongVariableName12345 + (a - b + c);
    }
}

procedure prod2
{
    while (((a / b - c) && (2)) || (b <= c))
    {
        a = (a / b - c) % (a - b + c) + a + (a - b + c) + b + c;
        while (
            !(((((((!(a - b + c)) || (b < c)) && (a - b + c)) || (3)) || (a / b - c)) && (a - b + c)) ||
              (a >= b)))
        {
            a = (a / b - c) % VeryLongVariableName12345 + (a - b + c);
            a = (a / b - c) % a / VeryLongVariableName12345 + (a - b + c);
        }
        while ((2 < a - b + c) && (a / b - c > 3))
        {
            a = (a / b - c) % (a - b + c) + a + (a - b + c) + (a * (b * c) - 3 + 2 % (a - b));
            a = (a / b - c) % (a - b + c) + a + (a - b + c) + ((a - b) * c - (a / 3));
            a = (a / b - c) % (a - b + c) + (a + (a - b + c) * b * c / 1 / 2 % 3);
            a = ((a / b - c) % (a - b + c) + (a + (a - b + c) * b * c / 1 / 2 % 3));
        }
        while (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % (a + b) < b)
        {
            a = ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3) + (a - b + c);
            a = (a / b - c) % VeryLongVariableName12345;
        }
        read print;

        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3);
        while ((a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a) && ((a + b)))
        {
            a = (a / b - c) % (a - b + c) + a + ((a - b) * c - (a / 3)) + (a - b + c);
            a = (a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3) + (a - b + c);
        }
        a = (a / b - c) % a / VeryLongVariableName12345;
        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3);
        while (((a + b)) || (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a))
        {
            a = (a / b - c) % a / VeryLongVariableName12345;
            a = (a / b - c) % (a - b + c) + a + (a - b + c) + b + c;
            while (
                (((a + b)) && (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a) || (b <= c)))
            {
                a = (a / b - c) % (a - b + c) - (a / 3) - (a * a) + (a - b + c);
                call prod3;
            }
            while ((((c <= a ) || (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) && (a > c)))
            {
                a = (a / b - c) % (a - b + c) - (a / 3) * (a + b / c) + (a - b + c);
            }
            while (!(((((((!(a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) || (b < c)) &&
                         (a >= b)) ||
                        (3)) ||
                       (1)) &&
                      (a > b)) ||
                     (a >= b)))
            {
                a = ((a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3)) + (a - b + c);
            }
            while ((a < (a + b)) && (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a > 3))
            {
                a = (a / b - c) % (a - b + c) / (a / 3) / (a + b) + (a - b + c);
            }
            while (!((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a))
            {
                a = (a / b - c) % (a - b + c) % b - c + (a - b + c);
                if (a < b)
                    then
                    {
                        a = (a - b + c) + a + (a * (b * c) - 3 % (a - b)) + a / b - c;
                        a = (a - b + c) + a / b - c + ((a - b) * c - (a / 3)) + a - c;
                        a = (a - b + c) + (a * b * c / 1 / 2 % 3) + a - c;
                        while (a * a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a <=
                               (a + b) + 1)
                        {
                            a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) - (a * a);
                            a = (a / b - c) % (a - b + c) / (a + (a - b + c) / 3) / (a + b);
                            while (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a / b +
                                       c ==
                                   (a + b))
                            {
                                a = (a / b - c) % (a - b + c) % b + (a - b + c) - c;
                                a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) * (a + b / c);
                                while (a - c / (a + b) != a - c / a % b % 1 % 2 % 3 / 1 % 2 % 3 %
                                                                  a % b % c % 1 % 1 % 3 % a)
                                {
                                    a = (a / b - c) % (a - b + c) + a +
                                        (a * (b * c) - 3 + 2 % (a - b) + (a - b + c));
                                }
                                call prod4;
                            }
                        }
                        read c;
                    }
                else
                {
                    a = (a - b + c) - (a / 3) + b - c;
                    a = (a - b + c) * (a / 3) + b - c;
                    a = (a - b + c) % b - c + a - c;
                    a = (a - b + c) - (a / 3) * (a / c) + a / b - c;
                    a = (a - b + c) - (a / 3) - (a * a) / b - c;
                    a = (a - b + c) / (a / 3) / (a + b) + a - c;
                    while (a - a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a < (a + b))
                    {
                        a = ((a / b - c) % (a - b + c)) + (a + (a - b + c) * b * c / 1 / 2 % 3);
                    }
                }
            }
        }
    }
}

procedure prod3
{
    read b;

    while (a < b)
    {
        while ((b <= a ) && (b > c))
        {
            a = (a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3);
            a = ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3);
        }
        while ((c <= a ) || (b < c))
        {
            a = ((a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3));
            a = (a / b - c) % (a - b + c) + a + ((a - b) * c - (a / 3));
        }
        while (((b <= a ) && (b > c)) || (b <= c))
        {
            while (!(a >= b))
            {
                a = (a / b - c) % (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b));
            }
            while ((!(a <= b)) && (a < b))
            {
                a = (a / b - c) % (a - b + c) + a + b + c;
            }
            while (a >= a + b)
            {
                a = (a / b - c) % VeryLongVariableName12345;
            }
            while (a - b < c)
            {
                a = (a / b - c) % a / VeryLongVariableName12345;
            }
            while (a * c <= b + 1)
            {
                a = (a / b - c) % (a - b + c) - (a / 3);
                a = (a / b - c) % (a - b + c) % b - c;
                a = (a / b - c) % (a - b + c) - (a / 3) * (a + b / c);
                a = (a / b - c) % (a - b + c) - (a / 3) - (a * a);
            }
            while (a / b + c == 3)
            {
                a = (a / b - c) % (a - b + c) / (a / 3) / (a + b);
                if (((b <= a ) && (b > c)) || (b <= c))
                    then
                    {
                        a = (1 * c / 3) - (b % 3);
                        a = (b * b) - (b % 3);
                        a = c * 1 * 2;
                        a = c * 1 * 2;
                        a = c * 1 * 2 * b;
                    }
                else
                {
                    a = b / c;
                    b = a % c;
                    c = b * c * 1 * 2 * c;
                    c = a / c * 1 * 2 / c;
                    c = a % b / c;
                    call prod5;
                }
            }
            while (a - c / b != a - c / b)
            {
                while (a < (a / b - c) % a / VeryLongVariableName12345)
                {
                    a = ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3);
                    if (((c <= a ) || (b < c)) && (a > c))
                        then
                        {
                            call prod6;
                            a = (1 * c / 3) - (b % a / b - c);
                            a = (b * b) - (b % a / b - c);
                            a = c * 1 * a / b - c;
                            a = c * 1 * a / b - c;
                            a = c * 1 * a / b - c * b;
                            a = b / a / b - c;
                        }
                    else
                    {
                        c = a * c * 1 * 2 % c;
                        a = a * 1;
                    }
                }
                while (a + (a * (b * c) - 3 + 2 % (a - b)) >
                       a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)
                {
                    a = (a / b - c) % (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b));
                }
                while ((a - b + c) + (a * b * c / 1 / 2 % 3) <=
                       ((a / b - c) % (a - b + c)) + (a * b * c / 1 / 2 % 3))
                {
                    a = (a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3);
                }
                if (!(((((((!(a == c)) || (b < c)) && (a > c)) || (3)) || (1)) && (a < b)) || (b < c)))
                    then
                    {
                        b = a % a / b - c;
                        c = b * c * 1 * 2 * a / b - c;
                        c = a / c * 1 * 2 / a / b - c;
                    }
                else
                {
                    c = a % b / a / b - c;
                    c = a * c * 1 * 2 % a / b - c;
                    a = a * a / b - c;
                    a = b / c * 1 * a / b - c;
                    call prod8;
                    call prod6;
                }
                while ((a - b + c) && (b > c))
                {
                    a = ((a / b - c) % (a - b + c) + (a * b * c / 1 / 2 % 3));
                    while ((a - b + c) || (a / b - c))
                    {
                        while ((((a - b + c) || (b < c)) && (a > c)))
                        {
                            a = (a / b - c) % (a - b + c) + a + ((a - b) * c - (a / 3));
                        }
                    }
                    if ((a < b) && (c > 3))
                        then
                        {
                            c = b % c * 1 * a / b - c;
                            a = 1 * c * 1 * 2 / a / b - c;
                            b = 2 * 3 % a / b - c;
                        }
                    else
                    {
                        c = 2 * c * 1 * 2 / a / b - c;
                        a = c * 1 * 2 / 3 * a / b - c;
                        b = c * 1 * 2 / 2 % a / b - c;
                    }
                }
            }
        }
        read a;

        while (((c <= a ) || (b < c)) && (a > c))
        {
            VeryLongVariableName12345VeryLongVariableName12345 = 1;
            a = VeryLongVariableName12345;
            a = b;
            a = 3;
            a = b * b;
        }
        while (!(((((((!(a == c)) || (b < c)) && (a > c)) || (3)) || (1)) && (a < b)) || (b < c)))
        {
            a = b / c;
            b = a % c;
            call prod6;
            c = b * b * c;
            c = a / b / c;
            c = a % b / c;
            c = a * b % c;
            a = a * 1;
            a = b / 2;
            c = b % 3;
            a = 1 * c / 3;
        }
        while ((a < b) && (c > 3))
        {
            c = a % b / c;
            call prod8;
        }
    }
}

procedure prod4
{
    while (a * a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a <= (a + b) + 1)
    {
        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) - (a * a);
        a = (a / b - c) % (a - b + c) / (a + (a - b + c) / 3) / (a + b);
        while (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a / b + c == (a + b))
        {
            a = (a / b - c) % (a - b + c) % b + (a - b + c) - c;
            a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) * (a + b / c);
            while (a - c / (a + b) !=
                   a - c / a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)
            {
                call prod5;
                a = (a / b - c) % (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b) + (a - b + c));
                if ((b <= a ) && (b > c))
                    then
                    {
                        a = a / 3 * c;
                        b = b / 2 % c;
                        c = c * 1 * 2;
                    }
                else
                {
                    a = a * b * c / 1 / 2 / 3;
                    b = a * 1 / b % 2 * c / 3;
                    c = c % 3 * 2 / b % 1 / a;
                }
            }
            a = (1 / 3) - (b % a / b - c);
            a = (b) - (b % a / b - c);
            if (a < b)
                then
                {
                    b = 2 * 3 % c;
                    c = 2 * 3 / 1;
                    if ((c <= a ) || (b < c))
                        then
                        {
                            a = a * b * c * 1 * 2 * 3 * c * b * a * 1 * 2 * 3 / a / b / c;
                            b = a * 2 / b * 3 % 1 % b / 3 * b / 2 / 1 * 1 % a * b / c * 1;
                            c = a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a;
                        }
                    else
                    {
                        c = c * 1 * 2 * 1 * a / b - c;
                        call prod6;
                    }
                }
            else
            {
                a = a / 3 * c;
                b = b / 2 % c;
                c = c * 1 * 2;
                call prod5;
            }
            if (!(a >= b))
                then
                {
                    while ((!(a <= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) &&
                           (a > b))
                    {
                        a = (a / b - c) % (a - b + c) + a + b + c + (a - b + c);
                    }
                    while ((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a + b)
                    {
                        a = (a / b - c) % (a - b + c) - (a / 3) + (a - b + c);
                    }
                    a = (a - b + c) / (a / 3) / (a + b);
                    a = (a - b + c) + a + (a * (b * c) - 3 + 2 % (a - b));
                }
            else
            {
                a = 1 * c * 2 / a / b - c;
                b = 2 * 3 / b - c;
                call prod6;
            }
        }
        print prod8;
    }
}

procedure prod5
{
    if (a - c / (a + b) != a - c / a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)
        then
        {
            a = (a / b - c) % (a - b + c) + a + b + c + (a - b + c);
            if (a < b)
                then
                {
                    a = (a - b + c) + a + (a * (b * c) - 3 % (a - b)) + a / b - c;
                    a = (a - b + c) + a / b - c + ((a - b) * c - (a / 3)) + a - c;
                    a = (a - b + c) + (a * b * c / 1 / 2 % 3) + a - c;
                    while (a * a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a <=
                           (a + b) + 1)
                    {
                        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) - (a * a);
                        a = (a / b - c) % (a - b + c) / (a + (a - b + c) / 3) / (a + b);
                        call prod6;
                        while (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a / b + c ==
                               (a + b))
                        {
                            a = (a / b - c) % (a - b + c) % b + (a - b + c) - c;
                            a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) * (a + b / c);
                            while (a - c / (a + b) != a - c / a % b % 1 % 2 % 3 / 1 % 2 % 3 % a %
                                                              b % c % 1 % 1 % 3 % a)
                            {
                                a = (a / b - c) % (a - b + c) + a +
                                    (a * (b * c) - 3 + 2 % (a - b) + (a - b + c));
                            }
                        }
                        if (a >= a + b)
                            then
                            {
                                if ((!(a <= b)) && (a < b))
                                    then
                                    {
                                        a = c * 1 * 2 / 3 * a / b - c;
                                        b = c * 1 * 2 % a / b - c;
                                    }
                                else
                                {
                                    c = b % c * 1 * a / b - c;
                                    c = 2 * c * 2 / a / b - c;
                                    c = c * 1 * 2 * a / b - c;
                                }
                                a = a + (a - b + c - a + 3 + 2);
                                call prod6;
                                a = a + (a * a);
                            }
                        else
                        {
                            a = a + (a / c);
                            a = a + (a * b - c);
                            a = a + (a + b / c);
                            if (a - b < c)
                                then { a = a + (a * (b * c) - 3 + 2 % (a - b)); }
                            else
                            {
                                a = (a - b + c) * (a / 3);
                                a = (a - b + c) % b - c;
                                call prod8;
                            }
                        }
                    }
                }
            else
            {
                a = (a - b + c) - (a / 3) + b - c;
                a = (a - b + c) * (a / 3) + b - c;
                a = (a - b + c) % b - c + a - c;
                a = (a - b + c) - (a / 3) * (a / c) + a / b - c;
                a = (a - b + c) - (a / 3) - (a * a) / b - c;
                a = (a - b + c) / (a / 3) / (a + b) + a - c;
                while (a - a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a < (a + b))
                {
                    a = ((a / b - c) % (a - b + c)) + (a + (a - b + c) * b * c / 1 / 2 % 3);
                    call prod6;
                }
            }
        }
    else
    {
        a = (a / b - c) % a / VeryLongVariableName12345 + (a - b + c);
    }
}

procedure prod6
{
    if (a >= a + b)
        then
        {
            call prod8;
            if ((!(a <= b)) && (a < b))
                then
                {
                    a = c * 1 * 2 / 3 * a / b - c;
                    b = c * 1 * 2 % a / b - c;
                }
            else
            {
                c = b % c * 1 * a / b - c;
                c = 2 * c * 2 / a / b - c;
                c = c * 1 * 2 * a / b - c;
            }
            a = a + (a - b + c - a + 3 + 2);
            call prod8;
            a = a + (a * a);
        }
    else
    {
        a = a + (a / c);
        a = a + (a * b - c);
        call prod8;
        a = a + (a + b / c);
        if (a - b < c)
            then
            {
                call prod8;
                a = a + (a * (b * c) - 3 + 2 % (a - b));
            }
        else
        {
            a = (a - b + c) * (a / 3);
            a = (a - b + c) % b - c;
            call prod8;
        }
    }
}

procedure prod7
{
    a = thisIsAProcedureNotCalledByAnyOtherProcedureAtAll;
    if ((((a + b)) && (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) || (b <= c))
        then { a = (a / b - c) % (a - b + c) + (a + (a - b + c) * b * c / 1 / 2 % 3); }
    else
    {
        a = (a / b - c) % (a - b + c) + a + (a - b + c) + ((a - b) * c - (a / 3));
    }
    if (((c <= a ) || (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) && (a > c))
        then { a = (a / b - c) % (a - b + c) + a + (a - b + c) + (a * (b * c) - 3 + 2 % (a - b)); }
    else
    {
        a = (a / b - c) % (a - b + c) / (a + (a - b + c) / 3) / (a + b);
    }
    if (!(((((((!(a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a)) || (b < c)) && (a > c)) ||
             (3)) ||
            (1)) &&
           (a > b)) ||
          (a >= b)))
        then { a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) - (a * a); }
    else
    {
        a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3) * (a + b / c);
    }
    if ((a < (a + b)) && (a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a > 3))
        then { a = (a / b - c) % (a - b + c) - (a + (a - b + c) / 3); }
    else
    {
        a = (a / b - c) % (a - b + c) + a + (a - b + c) + b + c;
    }
    if (!((a + b) >= a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a))
        then { a = (a / b - c) % a / VeryLongVariableName12345; }
    else
    {
        a = (a / b - c) % VeryLongVariableName12345;
    }
}

procedure prod8
{
    a = thisIsTheLastProcedureWhereAllTheCallsWillEndHereToPreventCyclicDependency;
    a = b;
    a = 3;
    a = b * b;
    a = b / c;
    b = a % c;
    c = b * b * c;
    c = a / b / c;
    c = a % b / c;
    c = a * b % c;
    a = a * 1;
    a = b / 2;
    c = b % 3;
    a = 1 * c / 3;
    b = 2 * 3 % c;
    c = 2 * 3 / 1;
    a = a / 3 * c;
    b = b / 2 % c;
    c = c * 1 * 2;
    a = a * b * c / 1 / 2 / 3;
    b = a * 1 / b % 2 * c / 3;
    c = c % 3 * 2 / b % 1 / a;
    a = a * b * c * 1 * 2 * 3 * c * b * a * 1 * 2 * 3 / a / b / c;
    b = a * 2 / b * 3 % 1 % b / 3 * b / 2 / 1 * 1 % a * b / c * 1;
    c = a % b % 1 % 2 % 3 / 1 % 2 % 3 % a % b % c % 1 % 1 % 3 % a;
}