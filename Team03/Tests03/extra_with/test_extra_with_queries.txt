11 - stmt, stmt
stmt s1; read r;
Select s1 with s1.stmt# = r.stmt#
10,119,125,134,21,248,250,255,264,27,32,40,400,410,444,45,516,518,548,601,62,635,644,71,719,8,84,9,95
5000
12 - const, const
constant c1, c2;
Select c1 with c1.value = c2.value
1,2,3
5000
13 - int, int
stmt s1;
Select s1 with 1 = 1
1,10,100,101,102,103,104,105,106,107,108,109,11,110,111,112,113,114,115,116,117,118,119,12,120,121,122,123,124,125,126,127,128,129,13,130,131,132,133,134,135,136,137,138,139,14,140,141,142,143,144,145,146,147,148,149,15,150,151,152,153,154,155,156,157,158,159,16,160,161,162,163,164,165,166,167,168,169,17,170,171,172,173,174,175,176,177,178,179,18,180,181,182,183,184,185,186,187,188,189,19,190,191,192,193,194,195,196,197,198,199,2,20,200,201,202,203,204,205,206,207,208,209,21,210,211,212,213,214,215,216,217,218,219,22,220,221,222,223,224,225,226,227,228,229,23,230,231,232,233,234,235,236,237,238,239,24,240,241,242,243,244,245,246,247,248,249,25,250,251,252,253,254,255,256,257,258,259,26,260,261,262,263,264,265,266,267,268,269,27,270,271,272,273,274,275,276,277,278,279,28,280,281,282,283,284,285,286,287,288,289,29,290,291,292,293,294,295,296,297,298,299,3,30,300,301,302,303,304,305,306,307,308,309,31,310,311,312,313,314,315,316,317,318,319,32,320,321,322,323,324,325,326,327,328,329,33,330,331,332,333,334,335,336,337,338,339,34,340,341,342,343,344,345,346,347,348,349,35,350,351,352,353,354,355,356,357,358,359,36,360,361,362,363,364,365,366,367,368,369,37,370,371,372,373,374,375,376,377,378,379,38,380,381,382,383,384,385,386,387,388,389,39,390,391,392,393,394,395,396,397,398,399,4,40,400,401,402,403,404,405,406,407,408,409,41,410,411,412,413,414,415,416,417,418,419,42,420,421,422,423,424,425,426,427,428,429,43,430,431,432,433,434,435,436,437,438,439,44,440,441,442,443,444,445,446,447,448,449,45,450,451,452,453,454,455,456,457,458,459,46,460,461,462,463,464,465,466,467,468,469,47,470,471,472,473,474,475,476,477,478,479,48,480,481,482,483,484,485,486,487,488,489,49,490,491,492,493,494,495,496,497,498,499,5,50,500,501,502,503,504,505,506,507,508,509,51,510,511,512,513,514,515,516,517,518,519,52,520,521,522,523,524,525,526,527,528,529,53,530,531,532,533,534,535,536,537,538,539,54,540,541,542,543,544,545,546,547,548,549,55,550,551,552,553,554,555,556,557,558,559,56,560,561,562,563,564,565,566,567,568,569,57,570,571,572,573,574,575,576,577,578,579,58,580,581,582,583,584,585,586,587,588,589,59,590,591,592,593,594,595,596,597,598,599,6,60,600,601,602,603,604,605,606,607,608,609,61,610,611,612,613,614,615,616,617,618,619,62,620,621,622,623,624,625,626,627,628,629,63,630,631,632,633,634,635,636,637,638,639,64,640,641,642,643,644,645,646,647,648,649,65,650,651,652,653,654,655,656,657,658,659,66,660,661,662,663,664,665,666,667,668,669,67,670,671,672,673,674,675,676,677,678,679,68,680,681,682,683,684,685,686,687,688,689,69,690,691,692,693,694,695,696,697,698,699,7,70,700,701,702,703,704,705,706,707,708,709,71,710,711,712,713,714,715,716,717,718,719,72,720,721,722,723,724,725,726,727,728,729,73,730,731,732,733,734,735,736,737,738,739,74,740,741,742,743,744,745,746,747,748,749,75,750,751,752,753,754,755,756,757,758,759,76,760,761,762,763,764,765,766,767,768,769,77,770,771,772,773,774,775,776,777,778,779,78,780,781,782,783,784,785,786,787,788,789,79,790,791,792,793,794,795,796,797,798,799,8,80,800,801,802,803,804,805,806,807,808,809,81,810,811,812,813,814,815,816,817,818,819,82,820,821,822,823,824,825,826,827,828,829,83,830,831,832,833,834,835,836,837,838,839,84,840,841,842,843,844,845,846,847,848,849,85,850,851,852,853,854,855,856,857,858,859,86,860,861,862,863,864,865,866,867,868,869,87,870,871,872,873,874,875,876,877,878,879,88,880,881,882,883,884,885,886,887,89,9,90,91,92,93,94,95,96,97,98,99
5000
14 - stmt, const
stmt s; constant c;
Select s with s.stmt# = c.value
1,2,3
5000
15 - stmt, const
stmt s; constant c;
Select c with s.stmt# = c.value
1,2,3
5000
16 - const, stmt
assign a; constant c;
Select r with c.value = a.stmt#

5000
17 - const, stmt
assign a; constant c;
Select c with c.value = a.stmt#
1,2,3
5000
18 - stmt, int
read r;
Select r with r.stmt# = 8
8
5000
19 - int, stmt
assign a;
Select c with a.stmt# = 24

5000
110 - const, int
constant c;
Select c with c.value = 2
2
5000
21 - varName, varName
read r; print p;
Select r with r.varName = p.varName 
10,119,125,134,21,248,250,255,264,27,32,40,400,410,444,45,516,518,548,601,62,635,644,71,719,8,84,9,95
5000
22 - varName, varName
read r; print p;
Select p with r.varName = p.varName 
129,146,153,159,162,223,227,236,242,404,414,418,42,427,435,5,50,522,523,6,65,7,78,782
5000
23 - procName, procName
procedure p; call c;
Select p with p.procName = c.procName
prod2,prod3,prod4,prod5,prod6,prod8
5000
24 - procName, procName
procedure p; call c;
Select c with p.procName = c.procName
140,199,226,241,258,281,309,323,343,345,363,386,41,432,438,441,613,634,679,684,705,706,729,740,748,767,771,781,792,806,815,824,827,835,839,842,846
5000
25 - ident, ident
procedure p;
Select p with "var" = "var"
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
26 - ident, ident
procedure p;
Select p with "c" = "c"
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
27 - ident, ident
read r;
Select r with "a" = "a"
10,119,125,134,21,248,250,255,264,27,32,40,400,410,444,45,516,518,548,601,62,635,644,71,719,8,84,9,95
5000
28 - varName, procName
procedure p; read r;
Select p with r.varName = p.procName
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
29 - varName, procName
procedure p; read r;
Select r with r.varName = p.procName
125,134,248,250,255,264,27,400,410,444,45,516,62,71,84,95
5000
210 - procName, varName
call c; print p;
Select c with c.procName = p.varName
140,199,226,241,258,281,309,323,343,345,363,386,41,432,438,441,613,634,679,684,705,706,729,740,748,767,771,781,792,806,815,824,827,835,839,842,846
5000
211 - procName, varName
call c; print p;
Select p with c.procName = p.varName
129,146,153,159,162,223,404,435,50,523,65,782
5000
212 - varName, ident
read r;
Select r with r.varName = "a"
32,719,8
5000
213 - varName, ident
print p;
Select p with p.varName = "b"
6
5000
214 - ident, varName
print p;
Select p with "c" = p.varName
7
5000
215 - procName, ident
call c;
Select c with c.procName = "prod3"
345,613
5000
216 - ident, procName
call c;
Select c with "prod2" = c.procName
140
5000
31 directly Calls
procedure p1, p2;
Select p1 such that Calls*(p1, p2)
prod1,prod2,prod3,prod4,prod5,prod6
5000
32 Any procedure(s) Calls prod6
procedure p;
Select p such that Calls*(p, "prod6") with 1 = 1
prod1,prod2,prod3,prod4,prod5
5000
33 Procedure
procedure p; stmt s; constant c;
Select p such that Calls*("prod1", "prod6") with s.stmt# = c.value
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
34 Any procedure Calls 
procedure p; assign a; constant c;
Select p such that Calls*(_,"prod6") with c.value = a.stmt#
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
35 Procedure call any procedure (wildcard)
procedure p; read r; print pr;
Select p such that Calls*("prod1", _) with r.varName = pr.varName
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
36 Any procedure that Calls procedure (wildcard)
procedure p; call c;
Select p such that Calls*(_,_) with p.procName = c.procName
prod2,prod3,prod4,prod5,prod6,prod8
5000
37 directly Calls any procedure
procedure p;
Select p such that Calls*(p, "prod4")
prod1,prod2
5000
38 Any procedure call other procedure (wildcard)
procedure p; constant c1, c2;
Select p such that Calls*(_,p) with c1.value = c2.value
prod2,prod3,prod4,prod5,prod6,prod8
5000
39 directly Calls
procedure p1, p2;
Select p1 such that Calls(p1, p2)
prod1,prod2,prod3,prod4,prod5,prod6
5000
310 Any procedure(s) Calls prod6
procedure p;
Select p such that Calls(p, "prod6") with 1 = 1
prod3,prod4,prod5
5000
311 Procedure
procedure p; stmt s; constant c;
Select p such that Calls("prod3", "prod6") with s.stmt# = c.value
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
312 Any procedure Calls 
procedure p; assign a; constant c;
Select p such that Calls(_,"prod6") with c.value = a.stmt#
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
313 Procedure Calls any procedure (wildcard)
procedure p; read r; print pr;
Select p such that Calls("prod1", _) with r.varName = pr.varName
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
314 Any procedure that Calls procedure (wildcard)
procedure p; Calls c;
Select p such that Calls(_,_) with p.procName = c.procName

5000
315 directly Calls any procedure
procedure p;
Select p such that Calls(p, "prod4")
prod1,prod2
5000
316 Any procedure Calls other procedure (wildcard)
procedure p; constant c1, c2;
Select p such that Calls(_,p) with c1.value = c2.value
prod2,prod3,prod4,prod5,prod6,prod8
5000
41 - ModifiesP ProcSyn Ident Ident pattern
procedure p; variable v; assign a; stmt s; constant c;
Select p such that Modifies("prod4", "a") pattern a(v, _) with s.stmt# = c.value
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
42 - ModifiesP ProcSyn ProcSyn VarSyn pattern
procedure p; variable v; assign a; read r;
Select p such that Modifies(p, v) pattern a(v, _) with r.stmt# = 8
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
43 - ModifiesP ProcSyn ProcSyn VarSyn pattern
procedure p; variable v; assign a; read r; print pr;
Select p such that Modifies(p, v) pattern a(v, _) with r.varName = pr.varName
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
44 - ModifiesP VarSyn Ident VarSyn pattern
procedure p; variable v; assign a; call c;
Select v such that Modifies("prod6", v) pattern a(v, _) with p.procName = c.procName
a,b,c
5000
45 - ModifiesP VarSyn ProcSyn Ident pattern
procedure p; variable v; assign a;
Select v such that Modifies(p, "c") pattern a(v, _) with "var" = "var"
VeryLongVariableName12345VeryLongVariableName12345,a,b,c
5000
46 - ModifiesP pattern Ident VarSyn pattern
procedure p; variable v; assign a; read r;
Select a such that Modifies("prod6", v) pattern a(v, _) with r.varName = p.procName
1,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,12,120,121,122,123,124,126,127,128,13,130,131,132,133,135,136,137,138,139,14,141,142,143,144,145,147,148,149,15,150,151,152,154,155,156,157,158,16,160,161,163,164,165,168,169,17,171,172,175,177,179,18,181,183,184,185,186,188,19,190,191,192,193,194,195,196,197,198,2,20,200,203,205,206,207,208,209,210,211,212,214,216,218,219,22,220,221,222,224,225,229,23,232,234,235,237,238,239,24,240,245,246,247,249,25,252,253,254,256,257,259,26,260,261,262,263,266,268,270,271,273,274,275,276,278,279,28,280,283,284,285,286,288,289,29,291,293,295,297,299,3,30,301,302,303,305,306,308,31,310,312,313,314,315,316,317,318,320,322,325,327,329,33,330,332,333,335,337,338,339,34,340,341,342,344,346,348,349,35,351,352,353,354,355,356,357,36,360,362,364,365,366,367,369,37,370,371,373,374,376,377,379,38,380,381,382,383,384,385,388,39,390,391,392,393,395,396,397,399,4,403,405,406,407,408,409,412,413,415,416,417,420,421,422,424,426,428,429,43,430,434,437,439,44,440,442,443,447,448,449,450,451,452,453,454,455,456,458,459,46,460,462,463,464,465,467,468,469,47,470,472,473,474,475,477,478,48,480,481,483,484,485,486,488,489,49,491,492,494,495,497,498,500,501,503,504,506,507,509,51,510,512,513,515,517,52,520,521,525,526,528,529,53,531,532,534,535,537,538,54,540,541,543,544,546,547,55,550,552,553,554,556,557,559,56,560,562,565,566,567,568,569,57,570,571,572,573,574,576,577,578,579,58,580,581,582,583,584,586,587,589,59,591,592,594,595,596,597,599,60,600,602,604,605,606,607,609,61,610,612,615,617,619,621,623,624,625,627,628,63,630,631,633,636,637,638,639,64,640,641,643,647,648,650,651,654,656,658,66,660,662,663,664,665,667,669,67,670,671,672,673,674,675,676,677,678,68,682,685,686,687,688,689,69,690,691,692,694,696,698,699,70,700,701,702,703,704,708,711,713,714,715,716,717,718,72,722,723,724,725,727,728,73,730,731,732,733,734,735,736,737,739,74,742,743,745,746,749,75,751,752,753,754,755,756,757,758,76,760,761,763,764,765,766,768,769,77,770,774,776,777,778,779,780,784,786,787,788,79,790,791,794,795,797,80,800,801,802,803,804,805,807,808,809,81,810,812,813,814,816,817,818,819,82,820,821,823,825,829,83,830,831,832,833,834,836,837,838,840,843,844,845,847,849,85,850,852,853,855,856,858,859,86,861,862,863,864,865,866,867,868,869,87,870,871,872,873,874,875,876,877,878,879,88,880,881,882,883,884,885,886,887,89,90,91,92,93,94,96,97,98,99
5000
47 - ModifiesP pattern ProcSyn VarSyn pattern
procedure p; variable v; assign a; call c; read r; print pr;
Select a such that Modifies(p, v) pattern a(v, _) with c.procName = pr.varName
1,100,101,102,103,104,105,106,107,108,109,11,110,111,112,113,114,115,116,117,118,12,120,121,122,123,124,126,127,128,13,130,131,132,133,135,136,137,138,139,14,141,142,143,144,145,147,148,149,15,150,151,152,154,155,156,157,158,16,160,161,163,164,165,168,169,17,171,172,175,177,179,18,181,183,184,185,186,188,19,190,191,192,193,194,195,196,197,198,2,20,200,203,205,206,207,208,209,210,211,212,214,216,218,219,22,220,221,222,224,225,229,23,232,234,235,237,238,239,24,240,244,245,246,247,249,25,252,253,254,256,257,259,26,260,261,262,263,266,268,270,271,273,274,275,276,278,279,28,280,283,284,285,286,288,289,29,291,293,295,297,299,3,30,301,302,303,305,306,308,31,310,312,313,314,315,316,317,318,320,322,325,327,329,33,330,332,333,335,337,338,339,34,340,341,342,344,346,348,349,35,351,352,353,354,355,356,357,36,360,362,364,365,366,367,369,37,370,371,373,374,376,377,379,38,380,381,382,383,384,385,388,39,390,391,392,393,395,396,397,399,4,403,405,406,407,408,409,412,413,415,416,417,420,421,422,424,426,428,429,43,430,434,437,439,44,440,442,443,447,448,449,450,451,452,453,454,455,456,458,459,46,460,462,463,464,465,467,468,469,47,470,472,473,474,475,477,478,48,480,481,483,484,485,486,488,489,49,491,492,494,495,497,498,500,501,503,504,506,507,509,51,510,512,513,515,517,52,520,521,525,526,528,529,53,531,532,534,535,537,538,54,540,541,543,544,546,547,55,550,552,553,554,556,557,559,56,560,562,565,566,567,568,569,57,570,571,572,573,574,576,577,578,579,58,580,581,582,583,584,586,587,589,59,591,592,594,595,596,597,599,60,600,602,604,605,606,607,609,61,610,612,615,617,619,621,623,624,625,627,628,63,630,631,633,636,637,638,639,64,640,641,643,647,648,650,651,654,656,658,66,660,662,663,664,665,667,669,67,670,671,672,673,674,675,676,677,678,68,682,685,686,687,688,689,69,690,691,692,694,696,698,699,70,700,701,702,703,704,708,711,713,714,715,716,717,718,72,721,722,723,724,725,727,728,73,730,731,732,733,734,735,736,737,739,74,742,743,745,746,749,75,751,752,753,754,755,756,757,758,76,760,761,763,764,765,766,768,769,77,770,774,776,777,778,779,780,784,786,787,788,79,790,791,794,795,797,80,800,801,802,803,804,805,807,808,809,81,810,812,813,814,816,817,818,819,82,820,821,823,825,829,83,830,831,832,833,834,836,837,838,840,843,844,845,847,849,85,850,852,853,855,856,858,859,86,861,862,863,864,865,866,867,868,869,87,870,871,872,873,874,875,876,877,878,879,88,880,881,882,883,884,885,886,887,89,90,91,92,93,94,96,97,98,99
5000
48 - ModifiesP VarSyn ProcSyn Ident pattern
procedure p; variable v, v1; assign a; read r;
Select v such that Modifies(p, "c") pattern a(v, _"c * 1 * a"_) with r.varName = "a"
a
5000
49 - ModifiesP VarSyn Ident Ident pattern
procedure p; variable v, v1; assign a; print pr;
Select v1 such that Modifies("prod3", v1) pattern a(v, _) with "c" = pr.varName
VeryLongVariableName12345VeryLongVariableName12345,a,b,c
5000
410 - ModifiesP VarSyn ProcSyn VarSyn pattern
procedure p; variable v, v1; assign a; call c;
Select v1 such that Modifies(p, v1) pattern a(v, _"a * b * c"_) with "prod2" = c.procName
VeryLongVariableName12345VeryLongVariableName12345,a,b,c,print,prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8,read
5000
411 - Select a such that Modifies(a, y1) pattern a(y1, _)
assign a; stmt s; stmt s1; read r;
Select a such that Modifies(a, "c") pattern a("c", _) with s1.stmt# = r.stmt#
102,105,18,19,197,198,20,200,211,219,22,220,221,222,234,238,25,254,256,257,259,262,266,29,33,339,342,349,353,354,357,36,39,449,450,451,473,481,486,488,489,52,53,54,55,567,568,569,66,67,676,677,678,68,69,691,699,700,701,702,713,716,73,730,731,732,733,736,739,753,756,76,761,765,766,770,80,802,803,804,831,832,833,869,870,871,872,875,878,881,884,887,89,90,91,92,96,99
5000
412 - assign, assign, IDENT, assign, variable, underscore
assign a; variable v; stmt s; constant c;
Select a such that Modifies(a, "c") pattern a(v, _) with s.stmt# = c.value
102,105,18,19,197,198,20,200,211,219,22,220,221,222,234,238,25,254,256,257,259,262,266,29,33,339,342,349,353,354,357,36,39,449,450,451,473,481,486,488,489,52,53,54,55,567,568,569,66,67,676,677,678,68,69,691,699,700,701,702,713,716,73,730,731,732,733,736,739,753,756,76,761,765,766,770,80,802,803,804,831,832,833,869,870,871,872,875,878,881,884,887,89,90,91,92,96,99
5000
413 - stmt, stmt, variable, assign, variable, underscore
assign a; stmt s; variable v; constant c;
Select s such that Modifies(s, v) pattern a(v, "a") with c.value = a.stmt#

5000
414 - stmt, stmt, variable, assign, IDENT, underscore
stmt s; variable v; assign a; read r;
Select s such that Modifies(s, v) pattern a("a", _) with r.stmt# = 8
1,10,100,101,102,103,104,105,106,107,108,109,11,110,111,112,113,114,115,116,117,118,119,12,120,121,122,123,124,125,126,127,128,13,130,131,132,133,134,135,136,137,138,139,14,140,141,142,143,144,145,147,148,149,15,150,151,152,154,155,156,157,158,16,160,161,163,164,165,166,167,168,169,17,170,171,172,173,174,175,176,177,178,179,18,180,181,182,183,184,185,186,187,188,189,19,190,191,192,193,194,195,196,197,198,199,2,20,200,201,202,203,204,205,206,207,208,209,21,210,211,212,213,214,215,216,217,218,219,22,220,221,222,224,225,226,228,229,23,230,231,232,233,234,235,237,238,239,24,240,241,243,244,245,246,247,248,249,25,250,251,252,253,254,255,256,257,258,259,26,260,261,262,263,264,265,266,267,268,269,27,270,271,272,273,274,275,276,277,278,279,28,280,281,282,283,284,285,286,287,288,289,29,290,291,292,293,294,295,296,297,298,299,3,30,300,301,302,303,304,305,306,307,308,309,31,310,311,312,313,314,315,316,317,318,319,32,320,321,322,323,324,325,326,327,328,329,33,330,331,332,333,334,335,336,337,338,339,34,340,341,342,343,344,345,346,347,348,349,35,350,351,352,353,354,355,356,357,358,359,36,360,361,362,363,364,365,366,367,368,369,37,370,371,372,373,374,375,376,377,378,379,38,380,381,382,383,384,385,386,387,388,389,39,390,391,392,393,394,395,396,397,398,399,4,40,400,401,402,403,405,406,407,408,409,41,410,411,412,413,415,416,417,419,420,421,422,423,424,425,426,428,429,43,430,431,432,433,434,436,437,438,439,44,440,441,442,443,444,445,446,447,448,449,45,450,451,452,453,454,455,456,457,458,459,46,460,461,462,463,464,465,466,467,468,469,47,470,471,472,473,474,475,476,477,478,479,48,480,481,482,483,484,485,486,487,488,489,49,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,51,510,511,512,513,514,515,516,517,518,519,52,520,521,524,525,526,527,528,529,53,530,531,532,533,534,535,536,537,538,539,54,540,541,542,543,544,545,546,547,548,549,55,550,551,552,553,554,555,556,557,558,559,56,560,561,562,563,564,565,566,567,568,569,57,570,571,572,573,574,575,576,577,578,579,58,580,581,582,583,584,585,586,587,588,589,59,590,591,592,593,594,595,596,597,598,599,60,600,601,602,603,604,605,606,607,608,609,61,610,611,612,613,614,615,616,617,618,619,62,620,621,622,623,624,625,626,627,628,629,63,630,631,632,633,634,635,636,637,638,639,64,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,66,660,661,662,663,664,665,666,667,668,669,67,670,671,672,673,674,675,676,677,678,679,68,680,681,682,683,684,685,686,687,688,689,69,690,691,692,693,694,695,696,697,698,699,70,700,701,702,703,704,705,706,707,708,709,71,710,711,712,713,714,715,716,717,718,719,72,720,721,722,723,724,725,726,727,728,729,73,730,731,732,733,734,735,736,737,738,739,74,740,741,742,743,744,745,746,747,748,749,75,750,751,752,753,754,755,756,757,758,759,76,760,761,762,763,764,765,766,767,768,769,77,770,771,772,773,774,775,776,777,778,779,780,781,783,784,785,786,787,788,789,79,790,791,792,793,794,795,796,797,798,799,8,80,800,801,802,803,804,805,806,807,808,809,81,810,811,812,813,814,815,816,817,818,819,82,820,821,822,823,824,825,826,827,828,829,83,830,831,832,833,834,835,836,837,838,839,84,840,841,842,843,844,845,846,847,848,849,85,850,851,852,853,854,855,856,857,858,859,86,860,861,862,863,864,865,866,867,868,869,87,870,871,872,873,874,875,876,877,878,879,88,880,881,882,883,884,885,886,887,89,9,90,91,92,93,94,95,96,97,98,99
5000
415 - read, read, variable, assign, IDENT, underscore
read r; variable v; assign a; constant c;
Select r such that Modifies(r, v) pattern a("a", _) with c.value = 2
10,119,125,134,21,248,250,255,264,27,32,40,400,410,444,45,516,518,548,601,62,635,644,71,719,8,84,9,95
5000
416 - if, if, IDENT, assign, variable, expression
if iif; assign a; variable v; read r; print p;
Select iif such that Modifies(iif, "a") pattern a(v, _"a"_) with r.varName = p.varName
189,204,217,233,300,336,347,350,358,368,389,394,401,411,419,425,431,445,446,457,461,466,471,476,479,482,490,493,496,499,502,505,508,511,514,519,524,527,530,533,536,539,542,545,549,551,563,564,575,622,668,683,697,712,750,759,762,772,783,785,798,799,811,826,828,841,848,851,854,857,860
5000
417 - Variable, read, variable, assign, variable, underscore
variable v; read r; assign a; procedure p; call c;
Select v such that Modifies(r, v) pattern a(v, _) with p.procName = c.procName
a,b,c
5000
418 - assign, while, IDENT, assign, IDENT, underscore
assign a; while w; 
Select a such that Modifies(w, "c") pattern a("c", _) with "var" = "var"
102,105,18,19,197,198,20,200,211,219,22,220,221,222,234,238,25,254,256,257,259,262,266,29,33,339,342,349,353,354,357,36,39,449,450,451,473,481,486,488,489,52,53,54,55,567,568,569,66,67,676,677,678,68,69,691,699,700,701,702,713,716,73,730,731,732,733,736,739,753,756,76,761,765,766,770,80,802,803,804,831,832,833,869,870,871,872,875,878,881,884,887,89,90,91,92,96,99
5000
419 - assign, while, IDENT, assign, variable, underscore
assign a; while w; variable v;
Select a such that Modifies(w, "c") pattern a(v, _) with "c" = "c"
1,100,101,102,103,104,105,106,107,108,109,11,110,111,112,113,114,115,116,117,118,12,120,121,122,123,124,126,127,128,13,130,131,132,133,135,136,137,138,139,14,141,142,143,144,145,147,148,149,15,150,151,152,154,155,156,157,158,16,160,161,163,164,165,168,169,17,171,172,175,177,179,18,181,183,184,185,186,188,19,190,191,192,193,194,195,196,197,198,2,20,200,203,205,206,207,208,209,210,211,212,214,216,218,219,22,220,221,222,224,225,229,23,232,234,235,237,238,239,24,240,244,245,246,247,249,25,252,253,254,256,257,259,26,260,261,262,263,266,268,270,271,273,274,275,276,278,279,28,280,283,284,285,286,288,289,29,291,293,295,297,299,3,30,301,302,303,305,306,308,31,310,312,313,314,315,316,317,318,320,322,325,327,329,33,330,332,333,335,337,338,339,34,340,341,342,344,346,348,349,35,351,352,353,354,355,356,357,36,360,362,364,365,366,367,369,37,370,371,373,374,376,377,379,38,380,381,382,383,384,385,388,39,390,391,392,393,395,396,397,399,4,403,405,406,407,408,409,412,413,415,416,417,420,421,422,424,426,428,429,43,430,434,437,439,44,440,442,443,447,448,449,450,451,452,453,454,455,456,458,459,46,460,462,463,464,465,467,468,469,47,470,472,473,474,475,477,478,48,480,481,483,484,485,486,488,489,49,491,492,494,495,497,498,500,501,503,504,506,507,509,51,510,512,513,515,517,52,520,521,525,526,528,529,53,531,532,534,535,537,538,54,540,541,543,544,546,547,55,550,552,553,554,556,557,559,56,560,562,565,566,567,568,569,57,570,571,572,573,574,576,577,578,579,58,580,581,582,583,584,586,587,589,59,591,592,594,595,596,597,599,60,600,602,604,605,606,607,609,61,610,612,615,617,619,621,623,624,625,627,628,63,630,631,633,636,637,638,639,64,640,641,643,647,648,650,651,654,656,658,66,660,662,663,664,665,667,669,67,670,671,672,673,674,675,676,677,678,68,682,685,686,687,688,689,69,690,691,692,694,696,698,699,70,700,701,702,703,704,708,711,713,714,715,716,717,718,72,721,722,723,724,725,727,728,73,730,731,732,733,734,735,736,737,739,74,742,743,745,746,749,75,751,752,753,754,755,756,757,758,76,760,761,763,764,765,766,768,769,77,770,774,776,777,778,779,780,784,786,787,788,79,790,791,794,795,797,80,800,801,802,803,804,805,807,808,809,81,810,812,813,814,816,817,818,819,82,820,821,823,825,829,83,830,831,832,833,834,836,837,838,840,843,844,845,847,849,85,850,852,853,855,856,858,859,86,861,862,863,864,865,866,867,868,869,87,870,871,872,873,874,875,876,877,878,879,88,880,881,882,883,884,885,886,887,89,90,91,92,93,94,96,97,98,99
5000
420 - variable, assign, IDENT, assign, variable, underscore
variable v; assign a; procedure p; read r;
Select v such that Modifies (a, "c") pattern a(v, _) with r.varName = p.procName
c
5000
421 - variable, if, IDENT, assign, variable, underscore
variable v; if iif; assign a; procedure p; read r;
Select v such that Modifies(iif, "c") pattern a(v, _) with r.varName = p.procName
VeryLongVariableName12345VeryLongVariableName12345,a,b,c
5000
51 - UsesP ProcSyn Ident Ident pattern
procedure p; variable v; assign a;
Select p such that Uses("prod3", "a") pattern a(v, _) with 1 = 1
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
52 - UsesP ProcSyn Ident Ident pattern
procedure p; variable v; assign a; stmt s; constant c;
Select p such that Uses("prod3", "b") pattern a(v, _) with s.stmt# = c.value
prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8
5000
53 - UsesP VarSyn Ident Ident pattern
procedure p; variable v; assign a; stmt s; constant c;
Select v such that Uses("prod1", "c") pattern a(v, _) with s.stmt# = c.value
VeryLongVariableName12345VeryLongVariableName12345,a,b,c
5000
54 - UsesP VarSyn ProcSyn Ident pattern
procedure p; variable v; assign a; constant c;
Select v such that Uses(p, "a") pattern a(v, _) with c.value = a.stmt#
a
5000
55 - UsesP pattern Ident Ident pattern
procedure p; variable v; assign a; constant c;
Select a such that Uses("prod4", "b") pattern a(v, _) with c.value = a.stmt#
1,2,3
5000
56 - UsesP pattern ProcSyn Ident pattern
procedure p; variable v; assign a; read r;
Select a such that Uses(p, "prod5") pattern a(v, _"c"_) with r.stmt# = 8
100,101,102,104,106,108,109,110,111,112,113,114,116,117,118,120,121,122,123,124,126,127,128,130,131,132,133,135,136,137,138,139,141,142,143,144,145,147,148,149,150,151,152,154,155,156,157,158,16,160,161,163,164,165,168,169,17,171,172,175,177,179,18,181,183,184,185,186,188,19,190,192,193,194,195,196,197,198,20,200,203,205,206,207,208,209,210,211,214,216,218,219,22,220,221,222,224,225,229,232,234,235,237,238,239,240,252,253,254,256,257,259,26,263,266,268,270,271,273,274,275,276,278,279,28,280,283,284,285,286,288,289,291,293,295,297,299,30,301,302,303,305,306,308,31,310,312,313,314,315,316,317,318,320,322,325,327,329,33,330,332,333,335,337,338,339,34,340,341,342,344,346,348,35,351,352,353,354,355,356,357,36,360,362,364,365,366,367,369,37,370,371,373,374,376,377,379,38,380,381,382,383,384,385,388,39,390,391,392,393,395,396,397,399,403,405,406,407,408,409,412,413,415,416,417,420,421,422,424,426,428,429,43,430,434,437,439,440,442,443,447,448,449,450,451,452,454,455,456,458,459,46,460,462,463,464,465,467,469,47,470,472,474,475,478,48,480,481,483,484,485,486,488,489,49,491,492,494,495,497,498,500,501,503,504,506,507,509,51,510,512,513,515,517,52,520,521,525,526,528,529,53,531,532,534,535,537,538,54,540,541,543,544,546,547,55,550,552,553,554,556,557,559,560,562,565,566,567,568,569,57,570,572,573,574,576,577,578,579,58,580,581,582,583,584,586,587,589,59,591,592,594,595,596,597,599,60,600,602,604,605,606,607,609,61,610,612,615,617,619,621,623,624,625,627,628,63,630,631,633,636,637,638,639,64,640,641,643,647,648,650,651,654,656,658,66,660,662,663,664,665,667,669,67,671,672,673,674,675,676,677,678,68,682,685,686,687,688,689,69,690,691,694,696,698,699,70,700,701,702,703,704,708,711,713,714,715,716,717,718,72,727,728,73,730,731,732,733,737,739,74,742,743,745,746,749,75,751,752,753,754,755,756,757,758,76,760,763,764,765,766,768,769,77,770,774,776,777,778,779,780,784,786,787,788,79,790,791,794,795,797,80,800,801,802,803,804,805,808,809,81,810,812,813,814,816,817,818,819,82,820,821,823,825,829,83,830,831,832,833,834,837,838,840,843,844,845,849,85,850,852,853,855,856,858,859,86,861,862,867,868,869,87,870,871,872,876,877,879,88,880,881,882,883,884,885,886,887,89,90,91,92,93,94,96,97,98,99
5000
57 - UsesP VarSyn Ident Ident pattern
procedure p; variable v, v1; assign a;
Select v such that Uses("prod6", "a") pattern a(v, _) with a.stmt# = 24
a
5000
58 - UsesP VarSyn Ident Ident pattern
procedure p; variable v, v1; assign a; read r; print pr;
Select v1 such that Uses("prod7", v1) pattern a(v, _) with r.varName = pr.varName
VeryLongVariableName12345,a,b,c,thisIsAProcedureNotCalledByAnyOtherProcedureAtAll
5000
59 - UsesP VarSyn Ident VarSyn pattern
procedure p; variable v, v1; call c; assign a;
Select v1 such that Uses("prod2", v1) pattern a(v, _"a / b - c"_) with "prod2" = c.procName
VeryLongVariableName12345,a,b,c,prod8,thisIsTheLastProcedureWhereAllTheCallsWillEndHereToPreventCyclicDependency
5000
510 - UsesP VarSyn ProcSyn VarSyn pattern
procedure p; variable v, v1; assign a; read r; print pr;
Select v1 such that Uses(p, v1) pattern a(v, _"c * 1 * a "_) with r.varName = pr.varName 
DoNotUseOtherVariableName,ForEasyPatternFindingMatchingTesting,VeryLongVariableName12345,a,b,c,print,prod1,prod2,prod3,prod4,prod5,prod6,prod7,prod8,read,thisIsAProcedureNotCalledByAnyOtherProcedureAtAll,thisIsTheLastProcedureWhereAllTheCallsWillEndHereToPreventCyclicDependency,useOnly123,useOnlyABC
5000
511 - Select a such that Uses(a, y1) pattern a(y1, _)
assign a; stmt s; procedure p; call c;
Select a such that Uses(a, "a") pattern a("a", _) with p.procName = c.procName
100,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,126,127,128,130,131,132,133,135,136,137,138,139,141,142,143,144,145,147,148,149,150,151,152,154,155,156,157,158,160,161,163,164,165,168,169,171,172,175,177,179,181,183,184,185,186,188,203,205,206,207,208,209,210,212,214,216,224,225,229,23,232,235,239,260,268,270,271,273,274,275,276,278,279,280,283,284,285,286,288,289,291,293,295,297,299,30,301,302,303,305,306,308,310,312,313,314,315,316,317,318,320,322,325,327,329,330,332,333,335,337,34,340,344,346,351,355,360,362,364,365,366,369,37,370,371,373,374,376,377,379,380,381,382,383,384,385,388,390,391,392,393,395,396,397,399,403,405,406,407,408,409,412,413,415,416,417,420,421,422,424,426,428,429,430,434,437,439,440,442,447,452,453,454,455,456,458,459,460,462,463,464,465,467,468,469,470,474,475,477,483,484,491,492,494,495,497,498,500,501,503,504,506,507,509,510,512,513,515,517,520,521,525,526,528,529,531,532,534,535,537,538,540,541,543,544,546,547,550,552,553,554,556,557,559,56,560,562,565,57,570,571,572,573,574,576,577,578,579,58,580,581,582,583,584,586,587,589,59,591,592,594,595,596,597,599,60,600,602,604,605,606,607,609,61,610,612,615,617,619,621,623,624,625,627,628,63,630,631,633,636,637,638,639,640,641,643,647,648,650,651,654,656,658,660,662,663,664,665,667,682,685,686,687,688,689,690,692,694,696,70,703,704,708,711,714,717,72,734,74,742,743,745,746,749,751,754,757,758,763,768,77,774,776,777,778,779,784,786,787,788,790,791,794,795,797,800,805,807,808,809,81,810,812,813,814,816,817,818,819,82,820,821,823,825,829,834,836,837,838,840,843,844,845,849,850,852,853,855,856,858,859,86,861,862,87,873,879,882,885,93,94,97
5000
512 - assign, assign, variable, assign, IDENT, underscore
assign a; variable v; procedure p; call c;
Select a such that Uses(a, v) pattern a("b", _) with p.procName = c.procName
101,104,17,196,218,237,240,253,28,31,338,341,348,35,352,356,367,38,443,448,472,485,51,566,64,675,698,715,718,728,75,752,755,760,764,769,780,79,801,830,868,877,88,880,883,886,98
5000
513 - stmt, stmt, variable, assign, variable, underscore
assign a; stmt s; variable v; procedure p;
Select s such that Uses(s, v) pattern a(v, _"a / b"_) with "var" = "var"
100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,126,127,128,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,154,155,156,157,158,16,160,161,163,164,165,166,167,168,169,17,170,171,172,173,174,175,176,177,178,179,18,180,181,182,183,184,185,186,187,188,189,19,190,192,193,194,195,196,197,198,199,20,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,22,220,221,222,224,225,226,228,229,23,230,231,232,233,234,235,237,238,239,240,241,243,251,252,253,254,256,257,258,259,26,260,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,28,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,30,300,301,302,303,304,305,306,307,308,309,31,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,33,330,331,332,333,334,335,336,337,338,339,34,340,341,342,343,344,345,346,347,348,35,350,351,352,353,354,355,356,357,358,359,36,360,361,362,363,364,365,366,367,368,369,37,370,371,372,373,374,375,376,377,378,379,38,380,381,382,383,384,385,386,387,388,389,39,390,391,392,393,394,395,396,397,398,399,401,402,403,405,406,407,408,409,41,411,412,413,415,416,417,419,420,421,422,423,424,425,426,428,429,43,430,431,432,433,434,436,437,438,439,440,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,46,460,461,462,463,464,465,466,467,468,469,47,470,471,472,473,474,475,476,477,478,479,48,480,481,482,483,484,485,486,487,488,489,49,490,491,492,493,494,495,496,497,498,499,5,500,501,502,503,504,505,506,507,508,509,51,510,511,512,513,514,515,517,519,52,520,521,524,525,526,527,528,529,53,530,531,532,533,534,535,536,537,538,539,54,540,541,542,543,544,545,546,547,549,55,550,551,552,553,554,555,556,557,558,559,56,560,561,562,563,564,565,566,567,568,569,57,570,571,572,573,574,575,576,577,578,579,58,580,581,582,583,584,585,586,587,588,589,59,590,591,592,593,594,595,596,597,598,599,60,600,602,603,604,605,606,607,608,609,61,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,63,630,631,632,633,634,636,637,638,639,64,640,641,642,643,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,66,660,661,662,663,664,665,666,667,668,669,67,671,672,673,674,675,676,677,678,679,68,680,681,682,683,684,685,686,687,688,689,69,690,691,692,693,694,695,696,697,698,699,7,70,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,72,720,726,727,728,729,73,730,731,732,733,734,737,738,739,74,740,741,742,743,744,745,746,747,748,749,75,750,751,752,753,754,755,756,757,758,759,76,760,762,763,764,765,766,767,768,769,77,770,771,772,773,774,775,776,777,778,779,780,781,783,784,785,786,787,788,789,79,790,791,792,793,794,795,796,797,798,799,80,800,801,802,803,804,805,806,807,808,809,81,810,811,812,813,814,815,816,817,818,819,82,820,821,822,823,824,825,826,827,828,829,83,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,848,849,85,850,851,852,853,854,855,856,857,858,859,86,860,861,862,867,868,869,87,870,871,872,873,876,877,879,88,880,881,882,883,884,885,886,887,89,90,91,92,93,94,96,97,98,99
9000
514 - if, if, IDENT, assign, IDENT, underscore
if iif; assign a; procedure p;
Select iif such that Uses(iif, "c") pattern a("c", _) with "c" = "c"
189,204,217,233,300,336,347,350,358,368,389,394,401,411,419,425,431,445,446,457,461,466,471,476,479,482,487,490,493,496,499,502,505,508,511,514,519,524,527,530,533,536,539,542,545,549,551,563,564,575,622,668,683,697,712,750,759,762,772,783,785,798,799,811,826,828,841,848,851,854,857,860
5000
515 - stmt, stmt, variable, assign, IDENT, underscore
stmt s; variable v; assign a;
Select s such that Uses(s, v) pattern a("a", _) with "a" = "a"
1,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,12,120,121,122,123,124,126,127,128,129,13,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,15,150,151,152,153,154,155,156,157,158,159,16,160,161,162,163,164,165,166,167,168,169,17,170,171,172,173,174,175,176,177,178,179,18,180,181,182,183,184,185,186,187,188,189,19,190,191,192,193,194,195,196,197,198,199,2,20,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,22,220,221,222,223,224,225,226,227,228,229,23,230,231,232,233,234,235,236,237,238,239,24,240,241,242,243,245,246,249,25,251,252,253,254,256,257,258,259,26,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,28,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,3,30,300,301,302,303,304,305,306,307,308,309,31,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,33,330,331,332,333,334,335,336,337,338,339,34,340,341,342,343,344,345,346,347,348,35,350,351,352,353,354,355,356,357,358,359,36,360,361,362,363,364,365,366,367,368,369,37,370,371,372,373,374,375,376,377,378,379,38,380,381,382,383,384,385,386,387,388,389,39,390,391,392,393,394,395,396,397,398,399,4,401,402,403,404,405,406,407,408,409,41,411,412,413,414,415,416,417,418,419,42,420,421,422,423,424,425,426,427,428,429,43,430,431,432,433,434,435,436,437,438,439,44,440,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,46,460,461,462,463,464,465,466,467,468,469,47,470,471,472,473,474,475,476,477,478,479,48,480,481,482,483,484,485,486,487,488,489,49,490,491,492,493,494,495,496,497,498,499,5,50,500,501,502,503,504,505,506,507,508,509,51,510,511,512,513,514,515,517,519,52,520,521,522,523,524,525,526,527,528,529,53,530,531,532,533,534,535,536,537,538,539,54,540,541,542,543,544,545,546,547,549,55,550,551,552,553,554,555,556,557,558,559,56,560,561,562,563,564,565,566,567,568,569,57,570,571,572,573,574,575,576,577,578,579,58,580,581,582,583,584,585,586,587,588,589,59,590,591,592,593,594,595,596,597,598,599,6,60,600,602,603,604,605,606,607,608,609,61,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,63,630,631,632,633,634,636,637,638,639,64,640,641,642,643,645,646,647,648,649,65,650,651,652,653,654,655,656,657,658,659,66,660,661,662,663,664,665,666,667,668,669,67,670,671,672,673,674,675,676,677,678,679,68,680,681,682,683,684,685,686,687,688,689,69,690,691,692,693,694,695,696,697,698,699,7,70,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,72,720,722,723,725,726,727,728,729,73,730,731,732,733,734,735,736,737,738,739,74,740,741,742,743,744,745,746,747,748,749,75,750,751,752,753,754,755,756,757,758,759,76,760,762,763,764,765,766,767,768,769,77,770,771,772,773,774,775,776,777,778,779,78,780,781,782,783,784,785,786,787,788,789,79,790,791,792,793,794,795,796,797,798,799,80,800,801,802,803,804,805,806,807,808,809,81,810,811,812,813,814,815,816,817,818,819,82,820,821,822,823,824,825,826,827,828,829,83,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,85,850,851,852,853,854,855,856,857,858,859,86,860,861,862,863,864,866,867,868,869,87,870,871,872,873,874,875,876,877,879,88,880,881,882,883,884,885,886,887,89,90,91,92,93,94,96,97,98,99
5000
516 - print, print, variable, assign, IDENT, expression
print p; variable v; assign a; procedure pr; read r;
Select p such that Uses(p, v) pattern a("b", _"b"_) with r.varName = pr.procName
129,146,153,159,162,223,227,236,242,404,414,418,42,427,435,5,50,522,523,6,65,7,78,782
5000
517 - if, if, IDENT, assign, variable, expression
if iif; assign a; variable v; call c; print p;
Select iif such that Uses(iif, "b") pattern a(v, _"b"_) with c.procName = p.varName
189,204,217,233,300,336,347,350,358,368,389,394,401,411,419,425,431,445,446,457,461,466,471,476,479,482,487,490,493,496,499,502,505,508,511,514,519,524,527,530,533,536,539,542,545,549,551,563,564,575,622,668,683,697,712,750,759,762,772,783,785,798,799,811,826,828,841,848,851,854,857,860
5000
518 - assign, while, IDENT, assign, IDENT, underscore
assign a; while w; call c; print p;
Select a such that Uses(w, "b") pattern a("b", _) with c.procName = p.varName
101,104,17,196,218,237,240,253,28,31,338,341,348,35,352,356,367,38,443,448,472,485,51,566,64,675,698,715,718,728,75,752,755,760,764,769,780,79,801,830,868,877,88,880,883,886,98
5000
519 - assign, print, variable, assign, IDENT, underscore
assign a; print p; variable v; read r;
Select a such that Uses(p, v) pattern a("b", _) with r.varName = "a"
101,104,17,196,218,237,240,253,28,31,338,341,348,35,352,356,367,38,443,448,472,485,51,566,64,675,698,715,718,728,75,752,755,760,764,769,780,79,801,830,868,877,88,880,883,886,98
5000
520 - variable, assign, IDENT, assign, variable, expression
variable v; assign a; print p;
Select v such that Uses(a, "a") pattern a(v, _"a"_) with p.varName = "b"
a,b,c
5000
521 - variable, if, IDENT, assign, variable, underscore
variable v; if iif; assign a; print p;
Select v such that Uses(iif, "a") pattern a(v, _) with "c" = p.varName
VeryLongVariableName12345VeryLongVariableName12345,a,b,c
5000
522 - while, assign, while, assign, while, underscore
while w; assign a; call c;
Select w such that Uses(a, w) pattern a(w, _"a"_) with c.procName = "prod3"

5000
